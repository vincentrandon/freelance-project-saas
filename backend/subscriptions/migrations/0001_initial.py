# Generated by Django 5.0.1 on 2025-10-31 12:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Plan name (e.g., 'Core Plan', 'Elite Plan')", max_length=100, unique=True)),
                ('tier', models.CharField(choices=[('FREE', 'Free'), ('CORE', 'Core'), ('ELITE', 'Elite')], help_text='Tier level', max_length=20, unique=True)),
                ('price_monthly', models.DecimalField(decimal_places=2, default=0.0, help_text='Monthly price in EUR', max_digits=10)),
                ('price_yearly', models.DecimalField(decimal_places=2, default=0.0, help_text='Yearly price in EUR (should include discount)', max_digits=10)),
                ('stripe_price_id_monthly', models.CharField(blank=True, help_text='Stripe Price ID for monthly billing', max_length=255)),
                ('stripe_price_id_yearly', models.CharField(blank=True, help_text='Stripe Price ID for yearly billing', max_length=255)),
                ('features', models.JSONField(default=dict, help_text='List of features available in this plan')),
                ('limits', models.JSONField(default=dict, help_text="Usage limits: {'invoice_creation': 25, 'estimate_creation': 25, 'document_import': 10}")),
                ('is_active', models.BooleanField(default=True, help_text='Is this plan available for new subscriptions?')),
                ('display_order', models.IntegerField(default=0, help_text='Display order on pricing page')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'ordering': ['display_order', 'tier'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.CharField(choices=[('FREE', 'Free'), ('CORE', 'Core'), ('ELITE', 'Elite')], default='FREE', help_text='Current subscription tier', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('trialing', 'Trialing'), ('past_due', 'Past Due'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='active', help_text='Subscription status', max_length=20)),
                ('billing_cycle', models.CharField(blank=True, choices=[('monthly', 'Monthly'), ('yearly', 'Yearly')], help_text='Billing cycle (monthly or yearly)', max_length=20)),
                ('current_period_start', models.DateTimeField(blank=True, help_text='Start of current billing period', null=True)),
                ('current_period_end', models.DateTimeField(blank=True, help_text='End of current billing period', null=True)),
                ('trial_ends_at', models.DateTimeField(blank=True, help_text='When trial period ends', null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, help_text='When subscription was cancelled', null=True)),
                ('cancel_at_period_end', models.BooleanField(default=False, help_text='Cancel subscription at end of current period')),
                ('stripe_customer_id', models.CharField(blank=True, help_text='Stripe customer ID', max_length=255)),
                ('stripe_subscription_id', models.CharField(blank=True, help_text='Stripe subscription ID', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(blank=True, help_text='Current subscription plan', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subscriptions', to='subscriptions.subscriptionplan')),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('upgraded', 'Upgraded'), ('downgraded', 'Downgraded'), ('cancelled', 'Cancelled'), ('reactivated', 'Reactivated'), ('trial_started', 'Trial Started'), ('trial_ended', 'Trial Ended'), ('payment_failed', 'Payment Failed'), ('payment_succeeded', 'Payment Succeeded')], help_text='Action performed', max_length=50)),
                ('old_tier', models.CharField(blank=True, choices=[('FREE', 'Free'), ('CORE', 'Core'), ('ELITE', 'Elite')], help_text='Previous tier', max_length=20)),
                ('new_tier', models.CharField(blank=True, choices=[('FREE', 'Free'), ('CORE', 'Core'), ('ELITE', 'Elite')], help_text='New tier', max_length=20)),
                ('reason', models.TextField(blank=True, help_text='Reason for action or additional notes')),
                ('stripe_invoice_id', models.CharField(blank=True, max_length=255)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount charged (if applicable)', max_digits=10, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subscription History',
                'verbose_name_plural': 'Subscription Histories',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='subscriptio_user_id_611955_idx')],
            },
        ),
        migrations.CreateModel(
            name='UsageCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(choices=[('invoice_creation', 'Invoice Creation'), ('estimate_creation', 'Estimate Creation'), ('document_import', 'Document Import'), ('email_sending', 'Email Sending'), ('signature_request', 'Signature Request'), ('cra_creation', 'CRA Creation')], help_text='Feature being tracked', max_length=50)),
                ('period_start', models.DateField(help_text='Start of tracking period (1st of month)')),
                ('period_end', models.DateField(help_text='End of tracking period (last day of month)')),
                ('count', models.IntegerField(default=0, help_text='Current usage count')),
                ('limit', models.IntegerField(blank=True, help_text='Usage limit for this period (null = unlimited)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_counters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Usage Counter',
                'verbose_name_plural': 'Usage Counters',
                'ordering': ['-period_start', 'feature'],
                'indexes': [models.Index(fields=['user', 'feature', 'period_start'], name='subscriptio_user_id_9fbbe7_idx')],
                'unique_together': {('user', 'feature', 'period_start')},
            },
        ),
    ]
