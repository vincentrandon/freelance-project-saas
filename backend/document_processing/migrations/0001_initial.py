# Generated by Django 5.0.1 on 2025-10-20 16:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        ('invoicing', '0002_estimate_project'),
        ('projects', '0002_project_estimated_budget_task'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ImportedDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='imported_documents/%Y/%m/%d/')),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.IntegerField()),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('parsed', 'Parsed'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('error', 'Error')], default='uploaded', max_length=20)),
                ('document_type', models.CharField(choices=[('invoice', 'Invoice'), ('estimate', 'Estimate'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('processing_time_seconds', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imported_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentParseResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_response', models.JSONField(help_text='Complete JSON response from OpenAI')),
                ('extracted_data', models.JSONField(help_text='Structured extraction: customer, project, tasks, etc.')),
                ('overall_confidence', models.IntegerField(default=0)),
                ('customer_confidence', models.IntegerField(default=0)),
                ('project_confidence', models.IntegerField(default=0)),
                ('tasks_confidence', models.IntegerField(default=0)),
                ('pricing_confidence', models.IntegerField(default=0)),
                ('detected_language', models.CharField(default='en', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parse_result', to='document_processing.importeddocument')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ImportPreview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending_review', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending_review', max_length=20)),
                ('customer_data', models.JSONField(help_text='Customer fields: name, email, company, etc.')),
                ('project_data', models.JSONField(help_text='Project fields: name, description, dates, etc.')),
                ('tasks_data', models.JSONField(help_text='Array of task objects')),
                ('invoice_estimate_data', models.JSONField(help_text='Invoice or estimate fields')),
                ('customer_match_confidence', models.IntegerField(default=0)),
                ('customer_action', models.CharField(choices=[('create_new', 'Create New'), ('use_existing', 'Use Existing'), ('merge', 'Merge')], default='create_new', max_length=20)),
                ('project_match_confidence', models.IntegerField(default=0)),
                ('project_action', models.CharField(choices=[('create_new', 'Create New'), ('use_existing', 'Use Existing'), ('merge', 'Merge')], default='create_new', max_length=20)),
                ('conflicts', models.JSONField(default=list, help_text='Array of conflict descriptions')),
                ('warnings', models.JSONField(default=list, help_text='Array of warning messages')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_from_preview', to='customers.customer')),
                ('created_estimate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_from_preview', to='invoicing.estimate')),
                ('created_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_from_preview', to='invoicing.invoice')),
                ('created_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_from_preview', to='projects.project')),
                ('document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preview', to='document_processing.importeddocument')),
                ('matched_customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers.customer')),
                ('matched_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.project')),
                ('parse_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='previews', to='document_processing.documentparseresult')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='importeddocument',
            index=models.Index(fields=['user', '-uploaded_at'], name='document_pr_user_id_3d3fa8_idx'),
        ),
        migrations.AddIndex(
            model_name='importeddocument',
            index=models.Index(fields=['status'], name='document_pr_status_aade43_idx'),
        ),
    ]
