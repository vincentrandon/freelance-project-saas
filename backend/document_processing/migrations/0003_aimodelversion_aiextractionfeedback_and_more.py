# Generated by Django 5.0.1 on 2025-10-23 09:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('document_processing', '0002_importpreview_auto_approve_eligible_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIModelVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(help_text="Version number, e.g., 'v1.0', 'v2.1'", max_length=50, unique=True)),
                ('base_model', models.CharField(help_text="OpenAI model name, e.g., 'gpt-4o', 'gpt-4o-ft-abc123'", max_length=100)),
                ('status', models.CharField(choices=[('training', 'Training'), ('evaluating', 'Evaluating'), ('ready', 'Ready'), ('active', 'Active'), ('archived', 'Archived'), ('failed', 'Failed')], default='training', max_length=20)),
                ('training_data_count', models.IntegerField(default=0, help_text='Number of feedback samples used for training')),
                ('training_file_id', models.CharField(blank=True, help_text='OpenAI file ID for training data', max_length=100, null=True)),
                ('fine_tune_job_id', models.CharField(blank=True, help_text='OpenAI fine-tuning job ID', max_length=100, null=True)),
                ('training_started_at', models.DateTimeField(blank=True, null=True)),
                ('training_completed_at', models.DateTimeField(blank=True, null=True)),
                ('accuracy_before', models.DecimalField(decimal_places=2, default=0, help_text='Baseline accuracy before training (%)', max_digits=5)),
                ('accuracy_after', models.DecimalField(blank=True, decimal_places=2, help_text='Accuracy after training (%)', max_digits=5, null=True)),
                ('improvements', models.JSONField(blank=True, default=dict, help_text="Per-field accuracy improvements: {'task_name': 15.5, ...}")),
                ('is_active', models.BooleanField(default=False, help_text='Whether this is the currently used model')),
                ('activated_at', models.DateTimeField(blank=True, help_text='When this version was first activated', null=True)),
                ('reactivated_at', models.DateTimeField(blank=True, help_text='When this version was restored after rollback', null=True)),
                ('deactivated_at', models.DateTimeField(blank=True, help_text='When this version was deactivated', null=True)),
                ('rollback_reason', models.TextField(blank=True, help_text='Reason for rollback if applicable', null=True)),
                ('training_cost_usd', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated training cost in USD', max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, help_text='Admin notes about this version')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('replaced_by', models.ForeignKey(blank=True, help_text='Version that replaced this one', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replaced_versions', to='document_processing.aimodelversion')),
            ],
            options={
                'verbose_name': 'AI Model Version',
                'verbose_name_plural': 'AI Model Versions',
                'ordering': ['-version'],
            },
        ),
        migrations.CreateModel(
            name='AIExtractionFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('task_clarification', 'Task Clarification'), ('manual_edit', 'Manual Edit'), ('implicit_positive', 'Implicit Positive'), ('field_correction', 'Field Correction')], help_text='Type of feedback captured', max_length=30)),
                ('original_data', models.JSONField(help_text='What AI originally extracted')),
                ('corrected_data', models.JSONField(help_text='What user changed it to')),
                ('field_path', models.CharField(help_text="Field path, e.g., 'tasks[2].name', 'customer.email'", max_length=255)),
                ('original_confidence', models.IntegerField(default=0, help_text="AI's original confidence score (0-100)")),
                ('was_edited', models.BooleanField(default=False, help_text='Whether user made changes')),
                ('edit_magnitude', models.CharField(choices=[('none', 'No Changes'), ('minor', 'Minor Tweaks'), ('moderate', 'Moderate Changes'), ('major', 'Complete Rewrite')], default='none', help_text='Severity of the correction', max_length=20)),
                ('user_rating', models.CharField(blank=True, choices=[('poor', 'üëé Poor'), ('needs_improvement', 'üòê Needs Improvement'), ('good', 'üòä Good'), ('excellent', 'üëç Excellent')], help_text="User's rating of AI extraction quality", max_length=20, null=True)),
                ('rating_comment', models.TextField(blank=True, help_text='Optional user comment about what could be improved', null=True)),
                ('was_used_for_training', models.BooleanField(default=False, help_text='Whether this feedback was used in model training')),
                ('training_batch_id', models.CharField(blank=True, help_text='OpenAI fine-tuning job ID', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='document_processing.importeddocument')),
                ('preview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='document_processing.importpreview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_feedback', to=settings.AUTH_USER_MODEL)),
                ('model_version_used', models.ForeignKey(blank=True, help_text='Model version that produced the original extraction', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback_received', to='document_processing.aimodelversion')),
            ],
            options={
                'verbose_name': 'AI Extraction Feedback',
                'verbose_name_plural': 'AI Extraction Feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='aimodelversion',
            index=models.Index(fields=['is_active'], name='document_pr_is_acti_89c644_idx'),
        ),
        migrations.AddIndex(
            model_name='aimodelversion',
            index=models.Index(fields=['status'], name='document_pr_status_f0d215_idx'),
        ),
        migrations.AddIndex(
            model_name='aimodelversion',
            index=models.Index(fields=['-created_at'], name='document_pr_created_011912_idx'),
        ),
        migrations.AddIndex(
            model_name='aiextractionfeedback',
            index=models.Index(fields=['user', '-created_at'], name='document_pr_user_id_379fbd_idx'),
        ),
        migrations.AddIndex(
            model_name='aiextractionfeedback',
            index=models.Index(fields=['feedback_type'], name='document_pr_feedbac_a47e39_idx'),
        ),
        migrations.AddIndex(
            model_name='aiextractionfeedback',
            index=models.Index(fields=['user_rating'], name='document_pr_user_ra_3bc4f7_idx'),
        ),
        migrations.AddIndex(
            model_name='aiextractionfeedback',
            index=models.Index(fields=['was_used_for_training'], name='document_pr_was_use_393afe_idx'),
        ),
        migrations.AddIndex(
            model_name='aiextractionfeedback',
            index=models.Index(fields=['edit_magnitude'], name='document_pr_edit_ma_7ffbe3_idx'),
        ),
    ]
