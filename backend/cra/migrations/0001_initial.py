# Generated by Django 5.0.1 on 2025-10-23 10:33

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0002_alter_customer_email'),
        ('projects', '0004_task_worked_days'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CRA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_month', models.IntegerField(help_text='Month number (1-12)', verbose_name='Month')),
                ('period_year', models.IntegerField(help_text='Year (YYYY)', verbose_name='Year')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_validation', 'Pending Validation'), ('validated', 'Validated'), ('rejected', 'Rejected')], default='draft', max_length=20, verbose_name='Status')),
                ('daily_rate', models.DecimalField(decimal_places=2, help_text='Daily rate in currency', max_digits=8, verbose_name='Daily Rate (TJM)')),
                ('total_days', models.DecimalField(decimal_places=2, default=0, help_text='Total days worked (calculated from tasks)', max_digits=8, verbose_name='Total Days')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, help_text='Total amount HT (total_days * daily_rate)', max_digits=12, verbose_name='Total Amount')),
                ('currency', models.CharField(default='EUR', max_length=3, verbose_name='Currency')),
                ('notes', models.TextField(blank=True, help_text='Additional notes or comments', verbose_name='Notes')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='cra/%Y/%m/', verbose_name='PDF File')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('submitted_at', models.DateTimeField(blank=True, help_text='When CRA was sent for validation', null=True, verbose_name='Submitted At')),
                ('validated_at', models.DateTimeField(blank=True, help_text='When CRA was validated by client', null=True, verbose_name='Validated At')),
                ('rejected_at', models.DateTimeField(blank=True, help_text='When CRA was rejected by client', null=True, verbose_name='Rejected At')),
                ('rejection_reason', models.TextField(blank=True, help_text='Reason for rejection if applicable', verbose_name='Rejection Reason')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cras', to='customers.customer', verbose_name='Customer')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cras', to='projects.project', verbose_name='Project')),
                ('tasks', models.ManyToManyField(blank=True, help_text='Tasks included in this activity report', related_name='cras', to='projects.task', verbose_name='Tasks')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cras', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Activity Report (CRA)',
                'verbose_name_plural': 'Activity Reports (CRA)',
                'ordering': ['-period_year', '-period_month', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CRASignature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signer_name', models.CharField(max_length=255, verbose_name='Signer Name')),
                ('signer_email', models.EmailField(max_length=254, verbose_name='Signer Email')),
                ('signer_company', models.CharField(blank=True, max_length=255, verbose_name='Signer Company')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Access Token')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('signed', 'Signed'), ('expired', 'Expired'), ('declined', 'Declined')], default='pending', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('expires_at', models.DateTimeField(verbose_name='Expires At')),
                ('signed_at', models.DateTimeField(blank=True, null=True, verbose_name='Signed At')),
                ('viewed_at', models.DateTimeField(blank=True, null=True, verbose_name='Viewed At')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('signature_method', models.CharField(blank=True, choices=[('draw', 'Drawn Signature'), ('upload', 'Uploaded Image'), ('type', 'Typed Name'), ('digital', 'Digital Certificate')], max_length=20, verbose_name='Signature Method')),
                ('signature_image', models.FileField(blank=True, null=True, upload_to='signatures/cra/%Y/%m/', verbose_name='Signature Image')),
                ('signature_metadata', models.JSONField(blank=True, default=dict, help_text='Additional signature data', verbose_name='Signature Metadata')),
                ('decline_reason', models.TextField(blank=True, verbose_name='Decline Reason')),
                ('email_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Email Sent At')),
                ('email_opened_count', models.IntegerField(default=0, verbose_name='Email Opened Count')),
                ('cra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signature_requests', to='cra.cra', verbose_name='CRA')),
            ],
            options={
                'verbose_name': 'CRA Signature Request',
                'verbose_name_plural': 'CRA Signature Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='cra',
            index=models.Index(fields=['user', 'status'], name='cra_cra_user_id_bccc12_idx'),
        ),
        migrations.AddIndex(
            model_name='cra',
            index=models.Index(fields=['customer'], name='cra_cra_custome_061b00_idx'),
        ),
        migrations.AddIndex(
            model_name='cra',
            index=models.Index(fields=['period_year', 'period_month'], name='cra_cra_period__48edd3_idx'),
        ),
        migrations.AddIndex(
            model_name='cra',
            index=models.Index(fields=['user', 'period_year', 'period_month'], name='cra_cra_user_id_444df8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cra',
            unique_together={('user', 'customer', 'period_month', 'period_year')},
        ),
        migrations.AddIndex(
            model_name='crasignature',
            index=models.Index(fields=['token'], name='cra_crasign_token_f73a98_idx'),
        ),
        migrations.AddIndex(
            model_name='crasignature',
            index=models.Index(fields=['status'], name='cra_crasign_status_d94d51_idx'),
        ),
        migrations.AddIndex(
            model_name='crasignature',
            index=models.Index(fields=['cra'], name='cra_crasign_cra_id_ab09b2_idx'),
        ),
        migrations.AddIndex(
            model_name='crasignature',
            index=models.Index(fields=['expires_at'], name='cra_crasign_expires_146026_idx'),
        ),
    ]
